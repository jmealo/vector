name: Publish

permissions:
  contents: write
  packages: write

on:
  workflow_call:
    inputs:
      git_ref:
        type: string
        required: true
        # channel is the dir/namespace packages are organized into.
        # Options are release/nightly/custom.
      channel:
        type: string
        required: true
  workflow_dispatch:
    inputs:
      git_ref:
        description: 'Git ref to build from (branch, tag, or commit)'
        required: true
        default: 'master'
      channel:
        description: 'Release channel'
        required: true
        default: 'custom'
        type: choice
        options:
          - release
          - nightly
          - custom

env:
  VERBOSE: true
  CI: true
  DISABLE_MOLD: true
  DEBIAN_FRONTEND: noninteractive
  CONTAINER_TOOL: docker
  CARGO_PROFILE_RELEASE_LTO: fat
  CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
  CHANNEL: ${{ inputs.channel }}

jobs:
  generate-publish-metadata:
    name: Generate Publish-related Metadata
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 5
    outputs:
      vector_version: ${{ steps.generate-publish-metadata.outputs.vector_version }}
      vector_build_desc: ${{ steps.generate-publish-metadata.outputs.vector_build_desc }}
      vector_release_channel: ${{ steps.generate-publish-metadata.outputs.vector_release_channel }}
    steps:
      - name: Checkout Vector
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.git_ref }}
      - name: Generate publish metadata
        id: generate-publish-metadata
        run: make ci-generate-publish-metadata

  build-x86_64-unknown-linux-gnu-packages:
    name: Build Vector for x86_64-unknown-linux-gnu (.tar.gz, DEB, RPM)
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 60
    needs: generate-publish-metadata
    env:
      VECTOR_VERSION: ${{ needs.generate-publish-metadata.outputs.vector_version }}
      VECTOR_BUILD_DESC: ${{ needs.generate-publish-metadata.outputs.vector_build_desc }}
      CHANNEL: ${{ needs.generate-publish-metadata.outputs.vector_release_channel }}
    steps:
      - name: Checkout Vector
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.git_ref }}
      - name: Bootstrap runner environment (Ubuntu-specific)
        run: sudo -E bash scripts/environment/bootstrap-ubuntu-24.04.sh
      - name: Bootstrap runner environment (generic)
        run: bash scripts/environment/prepare.sh --modules=rustup,cross
      - name: Build Vector
        run: make package-x86_64-unknown-linux-gnu-all
      - name: Stage package artifacts for publish
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: vector-${{ env.VECTOR_VERSION }}-x86_64-unknown-linux-gnu
          path: target/artifacts/vector*

  build-aarch64-unknown-linux-gnu-packages:
    name: Build Vector for aarch64-unknown-linux-gnu (.tar.gz)
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 60
    needs: generate-publish-metadata
    env:
      VECTOR_VERSION: ${{ needs.generate-publish-metadata.outputs.vector_version }}
      VECTOR_BUILD_DESC: ${{ needs.generate-publish-metadata.outputs.vector_build_desc }}
      CHANNEL: ${{ needs.generate-publish-metadata.outputs.vector_release_channel }}
    steps:
      - name: Checkout Vector
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.git_ref }}
      - name: Bootstrap runner environment (Ubuntu-specific)
        run: sudo -E bash scripts/environment/bootstrap-ubuntu-24.04.sh
      - name: Bootstrap runner environment (generic)
        run: bash scripts/environment/prepare.sh --modules=rustup,cross
      - name: Build Vector
        env:
          DOCKER_PRIVILEGED: "true"
        run: make package-aarch64-unknown-linux-gnu-all
      - name: Stage package artifacts for publish
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: vector-${{ env.VECTOR_VERSION }}-aarch64-unknown-linux-gnu
          path: target/artifacts/vector*

  publish-docker:
    name: Publish to Docker
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 15
    needs:
      - generate-publish-metadata
      - build-aarch64-unknown-linux-gnu-packages
      - build-x86_64-unknown-linux-gnu-packages
    env:
      VECTOR_VERSION: ${{ needs.generate-publish-metadata.outputs.vector_version }}
      VECTOR_BUILD_DESC: ${{ needs.generate-publish-metadata.outputs.vector_build_desc }}
      CHANNEL: ${{ needs.generate-publish-metadata.outputs.vector_release_channel }}
    steps:
      - name: Checkout Vector
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.git_ref }}
      - name: Login to Private Docker Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ secrets.YOUR_REGISTRY_URL }}
          username: ${{ secrets.YOUR_REGISTRY_USERNAME }}
          password: ${{ secrets.YOUR_REGISTRY_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          version: latest
          install: true
      - name: Download staged package artifacts (aarch64-unknown-linux-gnu)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: vector-${{ env.VECTOR_VERSION }}-aarch64-unknown-linux-gnu
          path: target/artifacts
      - name: Download staged package artifacts (x86_64-unknown-linux-gnu)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: vector-${{ env.VECTOR_VERSION }}-x86_64-unknown-linux-gnu
          path: target/artifacts
      - name: Build and publish distroless-libc Docker image
        run: |
          docker buildx build \
            --platform="linux/amd64,linux/arm64" \
            --tag "${{ secrets.YOUR_REGISTRY_URL }}/vector:${{ env.VECTOR_VERSION }}-distroless-libc" \
            --tag "${{ secrets.YOUR_REGISTRY_URL }}/vector:0.48.0-distroless-libc" \
            --push \
            target/artifacts \
            -f distribution/docker/distroless-libc/Dockerfile